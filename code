import logging
import random
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

questions = {
    "–ö–∞–∫–∞—è —Å—Ç–æ–ª–∏—Ü–∞ –†–æ—Å—Å–∏–∏?": "–ú–æ—Å–∫–≤–∞",
    "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2 + 2?": "4",
    "–ö–∞–∫–æ–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º?": "Python",
    "–°–∫–æ–ª—å–∫–æ –ø–ª–∞–Ω–µ—Ç –≤ —Å–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ?": "8"
}


def quiz(update, context):
    if not context.user_data.get('remaining_questions'):
        update.message.reply_text("–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã. –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        update.message.reply_text("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? –í–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã.")
        return

    question = random.choice(context.user_data['remaining_questions'])

    context.user_data['remaining_questions'].remove(question)

    context.user_data['correct_answer'] = questions[question]

    update.message.reply_text(question)


def start(update, context):
    remaining_questions = list(questions.keys())
    random.shuffle(remaining_questions)

    context.user_data['remaining_questions'] = remaining_questions

    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É. –Ø –∑–∞–¥–∞–º —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤, –∞ —Ç—ã –æ—Ç–≤–µ—á–∞–π –Ω–∞ –Ω–∏—Ö.")
    quiz(update, context)


def check_answer(update, context):
    user_answer = update.message.text.strip()

    correct_answer = context.user_data.get('correct_answer')

    if correct_answer:
        if user_answer.lower() == correct_answer.lower():
            update.message.reply_text("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! üéâ")
        else:
            update.message.reply_text(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ üòû –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")

        quiz(update, context)
    else:
        update.message.reply_text("–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, —Å–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")


def end_quiz(update, context):
    update.message.reply_text("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –≤–≤–µ–¥–∏ /start.")


def main():
    token = '6818622859:AAH-51KduXYkDgJAgE-vP-tS3e4PzGnTYws'
    updater = Updater(token, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))

    dp.add_handler(MessageHandler(Filters.regex(r'^–Ω–∞—á–∞—Ç—å$'), quiz))

    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, check_answer))

    dp.add_handler(MessageHandler(Filters.regex(r'^—Å—Ç–æ–ø$'), end_quiz))

    updater.start_polling()
    updater.idle()


if __name__ == '__main__':
    main()
